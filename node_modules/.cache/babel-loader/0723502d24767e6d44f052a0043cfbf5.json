{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\hooks2\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer, useState, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  const ctx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef(); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passState, dispatchPass] = useReducer(passReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passIsValid\n  } = passState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"check form validity\");\n      setFormIsValid(passIsValid && emailIsValid);\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n      console.log('cleanup');\n    }; // clean-up function run tylko po 1 execiution i przed seTimeout po kazym kolejnym wywolaniu Timeout -> Clean i od razu Time etc\n  }, [emailIsValid, passIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.value.includes('@') && passState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPass({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.value.includes('@') && passState.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPass({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.login,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: emailInputRef,\n          id: \"email\",\n          label: \"E-mail\",\n          type: \"email\",\n          isValid: emailIsValid,\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: passwordInputRef,\n          id: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          isValid: passIsValid,\n          value: passState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: classes.btn,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_s(Login, \"RhVmRRUEzXkgUUfsGdH7V9V07zg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/React/hooks2/src/components/Login/Login.js"],"names":["React","useContext","useEffect","useReducer","useState","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passReducer","trim","length","Login","ctx","emailInputRef","passwordInputRef","formIsValid","setFormIsValid","emailState","dispatchEmail","passState","dispatchPass","emailIsValid","passIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","authCtx","onLogin","passwordState","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer, useState, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n};\n\n\nconst Login = () => {\n\n  const ctx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const [passState, dispatchPass] = useReducer(passReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passIsValid } = passState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"check form validity\");\n      setFormIsValid(\n        passIsValid && emailIsValid\n      );\n    }, 500);\n\n    return () => {\n      clearTimeout(identifier);\n      console.log('cleanup');\n    };\n    // clean-up function run tylko po 1 execiution i przed seTimeout po kazym kolejnym wywolaniu Timeout -> Clean i od razu Time etc\n  }, [emailIsValid, passIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(\n    //   emailState.value.includes('@') && passState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPass({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(\n    //   emailState.value.includes('@') && passState.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPass({ type: 'INPUT_BLUR' });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    };\n\n    return (\n      <Card className={classes.login}>\n        <form onSubmit={submitHandler}>\n          <Input\n            ref={emailInputRef}\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            isValid={emailIsValid}\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          >\n          </Input>\n          <Input\n            ref={passwordInputRef}\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            isValid={passIsValid}\n            value={passState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          >\n          </Input>\n          <div className={classes.actions}>\n            <Button type=\"submit\" className={classes.btn}>\n              Login\n          </Button>\n          </div>\n        </form>\n      </Card>\n    );\n}};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}